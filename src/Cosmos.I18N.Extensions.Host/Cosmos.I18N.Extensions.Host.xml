<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.I18N.Extensions.Host</name>
    </assembly>
    <members>
        <member name="T:Cosmos.I18N.Core.HostedLanguageTagFactory">
            <summary>
            Hosted language tag factory
            </summary>
        </member>
        <member name="M:Cosmos.I18N.Core.HostedLanguageTagFactory.#ctor(Cosmos.I18N.IRequestedLanguageTagAccessor)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.I18N.Core.HostedLanguageTagFactory"/>.
            </summary>
            <param name="requestedAccessor"></param>
        </member>
        <member name="M:Cosmos.I18N.Core.HostedLanguageTagFactory.Get">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.I18N.Core.RequestedLanguageTagAccessor">
            <summary>
            Current request language tag accessor
            </summary>
        </member>
        <member name="M:Cosmos.I18N.Core.RequestedLanguageTagAccessor.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.I18N.Core.RequestedLanguageTagAccessor"/>.
            </summary>
            <param name="accessor"></param>
        </member>
        <member name="M:Cosmos.I18N.Core.RequestedLanguageTagAccessor.Get">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.I18N.Core.RequestedLanguageTagAccessor.HasContext">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.I18N.Core.ScopedLanguageTagMiddleware">
            <summary>
            Scoped language tag middleware
            </summary>
        </member>
        <member name="M:Cosmos.I18N.Core.ScopedLanguageTagMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.I18N.Core.ScopedLanguageTagMiddleware"/>.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Cosmos.I18N.Core.ScopedLanguageTagMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Cosmos.I18N.IRequestedLanguageTagAccessor)">
            <summary>
            Invoke async
            </summary>
            <param name="context"></param>
            <param name="accessor"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.I18N.IRequestedLanguageTagAccessor">
            <summary>
            Interface for current request language tag accessor
            </summary>
        </member>
        <member name="M:Cosmos.I18N.IRequestedLanguageTagAccessor.Get">
            <summary>
            Get language tag from current request.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmos.I18N.IRequestedLanguageTagAccessor.HasContext">
            <summary>
            Has HttpContext
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions">
            <summary>
            Application builder extensions
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseCosmosLocalization(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use cosmos localization
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.Hosting.GenericHostExtensions">
            <summary>
            Extensions for Microsoft generic host 
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Hosting.GenericHostExtensions.AddCosmosLocalization(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Cosmos.I18N.Configurations.I18NOptions},System.Action{Cosmos.I18N.Core.II18NServiceCollection})">
            <summary>
            Add Cosmos I18N
            </summary>
            <param name="builder"></param>
            <param name="optionsAct"></param>
            <param name="serviceConfigure"></param>
            <returns></returns>
        </member>
    </members>
</doc>
